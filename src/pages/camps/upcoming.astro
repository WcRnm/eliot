---
import BaseLayout from "@layouts/LayoutBase.astro";
import Brief from "@components/CampBrief.astro";
import Details from "@components/CampDetails.astro";

const today = new Date();
 
import { getCollection } from 'astro:content';
const campsAll = await getCollection('camps2');

interface Camp {
    id: string,
    data: {
        name: string,
        presenter: string,
        presenterUrl: string,
        theme: string,
        start: Date,
        end: Date,
        layout: string,
    },
    body: string,
    file: string,
    filePath: string,
    digest: string,
};

function compare( a: Camp, b: Camp ) {
    const aEnd = new Date(a.data.end).getTime();
    const bEnd = new Date(b.data.end).getTime();
    return (aEnd > bEnd) ? 1 : -1;
}

function filter( c: Camp) {
    const campEnd = new Date(c.data.end);
    return campEnd >= today;
}

const camps = Object.values(campsAll).filter(filter).sort(compare); 
---

<BaseLayout title="Eliot|Upcoming">
  <div class="container">

    <hgroup>
      <h1>Upcoming Camps</h1>
    </hgroup>

      <section>
        { camps.map((camp: Camp) => {
          const campYear = new Date(camp.data.start).getFullYear();

          return(
            <article>
              <Brief camp={camp} />
              <p></p>
              <details>
                <summary class="outline" role="button" tabindex="0">
                  {camp.data.name} program details ...
                </summary>
                <Details camp={camp} year={campYear} />
              </details>
            </article>
          )})}
      </section>
    </div>
</BaseLayout>
