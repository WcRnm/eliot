---
import Layout from '@layouts/LayoutBase.astro'

const { frontmatter } = Astro.props;

import { getCollection } from 'astro:content';
const miscDocs = await getCollection('miscDocs');
const newsDocs = await getCollection('newsDocs');
const policyDocs = await getCollection('policyDocs');

const docArr = [miscDocs, newsDocs, policyDocs];

function getDocById(id: string) {
    for (let i in docArr) {
        let doc = docArr[i].find((element: any) => element.id === id)?.data;
        if (doc) {
            return doc;
        }
    }
    return undefined;    
}
function getDocsByType(type: string) {
    let docs: string[] = [];
    for (let i in docArr) {
        docArr[i].forEach((doc) => {
            if (doc.data.type == type) {
                console.log(doc);
                docs.push(doc.data);
            }
        });
    }
    return docs;    
}

let docList = []

if (frontmatter.docs) {
    const ids = frontmatter.docs.split(',');
    console.log(ids);
    for (const id of ids) {
        const doc = getDocById(id.trim());
        if (doc) {
            docList.push(doc);
        }
    };
}

if (frontmatter.docTypes) {
    const types = frontmatter.docTypes.split(',');
    console.log(types);
    for (const type of types) {
        const docs = getDocsByType(type.trim());
        for (const doc of docs) {
            docList.push(doc);
        }
    };
}

console.log(docList);
const baseUrl = import.meta.env.BASE_URL;
function pageUrl(page : string) {
  return baseUrl + page;
}
---

<Layout title={frontmatter.title}>
    <article>
        <slot />
        <ul>
            {docList.map((d) => {
                const url = pageUrl('/docs/' + d.type + '/' + d.file);
                return (
                    <li><a href={url} target="other">{d.name}</a></li>
                )
            })}
        </ul>
    </article>
</Layout>