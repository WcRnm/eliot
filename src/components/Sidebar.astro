---
import { getCollection } from 'astro:content';
import Navbar from '@components/Navbar.astro';

const now = new Date();

const campsAll = await getCollection('camps');

interface Camp {
    id: string,
    data: {
        name: string,
        presenter: string,
        presenterUrl: string,
        theme: string,
        start: Date,
        end: Date,
        layout: string,
    },
    body: string,
    file: string,
    filePath: string,
    digest: string,
};

function compare( a: Camp, b: Camp ) {
    const aEnd = new Date(a.data.end).getTime();
    const bEnd = new Date(b.data.end).getTime();
    return (aEnd > bEnd) ? 1 : -1;
}

function filter( c: Camp) {
    return c.data.end >= now;
}

const camps = Object.values(campsAll).filter(filter).sort(compare); 

const baseUrl = import.meta.env.BASE_URL;
function pageUrl(page : string) {
  return baseUrl + page;
}

function dateSpan(camp) {
  return camp.data.start.toLocaleDateString() + '-' + camp.data.end.toLocaleDateString()
}

---
<Navbar />
<hr>
<h2><a href={pageUrl("/camps/upcoming")}>Upcoming Camps</a></h2>
<nav>
  <ul>
    {camps.map((camp: Camp) => {
        const url = pageUrl("/camps/" + camp.id);
        return (
          <li>
            <a href={url}}>{camp.data.name}</a>
            <small>{dateSpan(camp)}</small><br>
            <i>{camp.data.theme}</i>
          </li>
        )
    })}
    <li><a href={pageUrl("/camps/past")}>...Past Camps</a></li>
  </ul>
</nav>
